{"ast":null,"code":"import _classCallCheck from \"/Users/legeee/Desktop/todolist/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/legeee/Desktop/todolist/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/legeee/Desktop/todolist/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/legeee/Desktop/todolist/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/legeee/Desktop/todolist/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/legeee/Desktop/todolist/src/TodoList.js\";\nimport React, { Component, Fragment } from 'react';\n\nvar TodoList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TodoList, _Component);\n\n  //每一个class里面都有constructor方法，且在首位\n  function TodoList(props) {\n    var _this;\n\n    _classCallCheck(this, TodoList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TodoList).call(this, props)); //state负责存储组件里的数据\n\n    _this.state = {\n      inputValue: 'hello!!',\n      list: ['1', '2']\n    };\n    return _this;\n  }\n\n  _createClass(TodoList, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, \"//\\u4E8B\\u4EF6\\u7ED1\\u5B9A\\u7684\\u65F6\\u5019\\u53EF\\u4EE5\\u7528bind\\u5BF9\\u51FD\\u6570\\u7684\\u4F5C\\u7528\\u57DF\\u8FDB\\u884C\\u53D8\\u66F4\\uFF0C\\u5728JSX\\u4E2D\\u4F7F\\u7528JS\\u9700\\u8981\\u52A0\", \"//\\u5728React\\u4E2D\\uFF0C\\u7ED1\\u5B9A\\u4E8B\\u4EF6\\u7684\\u65F6\\u5019\\uFF0C\\u7B2C\\u4E8C\\u4E2A\\u5B57\\u6BCD\\u5927\\u5199\\u5F00\\u5934\\uFF0ConChange,onClick...\", React.createElement(\"input\", {\n        value: this.state.inputValue,\n        onChange: this.handleInputChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onChange: this.handleBtnClick.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \"\\u63D0\\u4EA4\")), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, this.state.list.map(function (item, index) {\n        return React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, item);\n      })));\n    }\n  }, {\n    key: \"handleInputChange\",\n    value: function handleInputChange(e) {\n      //对state里面的数据项进行变更，不能直接this.state.inputValue,要通过设置this.setState里面变更\n      this.setState({\n        inputValue: e.target.value\n      });\n    }\n  }, {\n    key: \"handleBtnClick\",\n    value: function handleBtnClick() {}\n  }]);\n\n  return TodoList;\n}(Component);\n\nexport default TodoList;","map":{"version":3,"sources":["/Users/legeee/Desktop/todolist/src/TodoList.js"],"names":["React","Component","Fragment","TodoList","props","state","inputValue","list","handleInputChange","bind","handleBtnClick","map","item","index","e","setState","target","value"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;;IACMC,Q;;;;;AACN;AACE,oBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,kFAAMA,KAAN,GADgB,CAEhB;;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE,SADD;AAEXC,MAAAA,IAAI,EAAE,CAAC,GAAD,EAAK,GAAL;AAFK,KAAb;AAHgB;AAOjB;;;;6BACQ;AACP,aACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kWAGG;AAAO,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,UAAzB;AAAqC,QAAA,QAAQ,EAAE,KAAKE,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHH,EAIG;AAAQ,QAAA,QAAQ,EAAE,KAAKC,cAAL,CAAoBD,IAApB,CAAyB,IAAzB,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJH,CADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEM,KAAKJ,KAAL,CAAWE,IAAX,CAAgBI,GAAhB,CAAoB,UAACC,IAAD,EAAMC,KAAN,EAAc;AAChC,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKD,IAAL,CAAP;AACD,OAFD,CAFN,CAPF,CADF;AAiBD;;;sCACiBE,C,EAAE;AAClB;AACA,WAAKC,QAAL,CAAc;AACZT,QAAAA,UAAU,EAAEQ,CAAC,CAACE,MAAF,CAASC;AADT,OAAd;AAGD;;;qCACe,CAEf;;;;EArCoBhB,S;;AAwCvB,eAAeE,QAAf","sourcesContent":["import React, { Component,Fragment } from 'react';\nclass TodoList extends Component {\n//每一个class里面都有constructor方法，且在首位\n  constructor(props){\n    super(props);\n    //state负责存储组件里的数据\n    this.state = {\n      inputValue: 'hello!!',\n      list: ['1','2']\n    }\n  }\n  render() {\n    return (\n      <Fragment>\n        <div>\n        //事件绑定的时候可以用bind对函数的作用域进行变更，在JSX中使用JS需要加{}\n        //在React中，绑定事件的时候，第二个字母大写开头，onChange,onClick...\n           <input value={this.state.inputValue} onChange={this.handleInputChange.bind(this)} />\n           <button onChange={this.handleBtnClick.bind(this)}>提交</button>\n        </div>\n        <ul>\n            {\n              this.state.list.map((item,index)=>{\n                return <li>{item}</li>\n              })\n            }\n        </ul>\n      </Fragment>\n    );\n  }\n  handleInputChange(e){\n    //对state里面的数据项进行变更，不能直接this.state.inputValue,要通过设置this.setState里面变更\n    this.setState({\n      inputValue: e.target.value\n    })\n  }\n  handleBtnClick(){\n    \n  }\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}